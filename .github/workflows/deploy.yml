# GitHub Actions workflow for deploying MedusaJS backend to VPS
# All secrets referenced below are configured in GitHub repository settings
name: Deploy Backend to VPS with Domain
on:
  push:
    branches: [main]
    paths:
      - "busbasisberlin/**"
      - ".github/workflows/deploy.yml"
      - "scripts/**"
      - "init-db.sql"
      - "package.json"
      - "package-lock.json"
  workflow_dispatch:

# Prevent multiple deployments from running simultaneously
# Let previous deployment finish instead of canceling it
concurrency:
  group: deploy-to-vps
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      SSL_CERT_NAME: ${{ secrets.SSL_CERT_NAME }}
      SSL_KEY_NAME: ${{ secrets.SSL_KEY_NAME }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      RESEND_FROM_EMAIL: ${{ secrets.RESEND_FROM_EMAIL }}
      S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
      S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      S3_REGION: ${{ secrets.S3_REGION }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
      S3_FILE_URL: ${{ secrets.S3_FILE_URL }}
      COMPANY_NAME: ${{ secrets.COMPANY_NAME }}
      COMPANY_ADDRESS: ${{ secrets.COMPANY_ADDRESS }}
      COMPANY_POSTAL_CODE: ${{ secrets.COMPANY_POSTAL_CODE }}
      COMPANY_CITY: ${{ secrets.COMPANY_CITY }}
      COMPANY_EMAIL: ${{ secrets.COMPANY_EMAIL }}
      COMPANY_PHONE: ${{ secrets.COMPANY_PHONE }}
      COMPANY_TAX_ID: ${{ secrets.COMPANY_TAX_ID }}
      COMPANY_BANK_INFO: ${{ secrets.COMPANY_BANK_INFO }}
      PDF_FOOTER_TEXT: ${{ secrets.PDF_FOOTER_TEXT }}
      EMAIL_SIGNATURE: ${{ secrets.EMAIL_SIGNATURE }}
      EMAIL_FOOTER: ${{ secrets.EMAIL_FOOTER }}
      MEDUSA_BACKEND_URL: ${{ secrets.MEDUSA_BACKEND_URL }}
      STORE_CORS: ${{ secrets.STORE_CORS }}
      ADMIN_CORS: ${{ secrets.ADMIN_CORS }}
      AUTH_CORS: ${{ secrets.AUTH_CORS }}
      STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      MEILISEARCH_HOST: ${{ secrets.MEILISEARCH_HOST }}
      MEILISEARCH_API_KEY: ${{ secrets.MEILISEARCH_API_KEY }}
      MEILISEARCH_MASTER_KEY: ${{ secrets.MEILISEARCH_MASTER_KEY }}
      MEILISEARCH_PRODUCT_INDEX_NAME: ${{ secrets.MEILISEARCH_PRODUCT_INDEX_NAME }}
      VITE_MEDUSA_BACKEND_URL: ${{ secrets.VITE_MEDUSA_BACKEND_URL }}
      STOREFRONT_URL: ${{ secrets.STOREFRONT_URL }}
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          command_timeout: 45m
          envs: DOMAIN_NAME,SSL_CERT_NAME,SSL_KEY_NAME,POSTGRES_PASSWORD,JWT_SECRET,COOKIE_SECRET,RESEND_API_KEY,RESEND_FROM_EMAIL,S3_ACCESS_KEY_ID,S3_SECRET_ACCESS_KEY,S3_REGION,S3_BUCKET,S3_ENDPOINT,S3_FILE_URL,COMPANY_NAME,COMPANY_ADDRESS,COMPANY_POSTAL_CODE,COMPANY_CITY,COMPANY_EMAIL,COMPANY_PHONE,COMPANY_TAX_ID,COMPANY_BANK_INFO,PDF_FOOTER_TEXT,EMAIL_SIGNATURE,EMAIL_FOOTER,MEDUSA_BACKEND_URL,STORE_CORS,ADMIN_CORS,AUTH_CORS,STRIPE_API_KEY,STRIPE_WEBHOOK_SECRET,MEILISEARCH_HOST,MEILISEARCH_API_KEY,MEILISEARCH_MASTER_KEY,MEILISEARCH_PRODUCT_INDEX_NAME,STOREFRONT_URL
          script: |
            cd /opt/medusa-app/busbasisberlin

            # Pull latest code with proper authentication
            git pull origin main

            # Export environment variables explicitly
            export DOMAIN_NAME="$DOMAIN_NAME"
            export SSL_CERT_NAME="$SSL_CERT_NAME"
            export SSL_KEY_NAME="$SSL_KEY_NAME"
            export POSTGRES_PASSWORD="$POSTGRES_PASSWORD"
            export JWT_SECRET="$JWT_SECRET"
            export COOKIE_SECRET="$COOKIE_SECRET"
            export RESEND_API_KEY="$RESEND_API_KEY"
            export RESEND_FROM_EMAIL="$RESEND_FROM_EMAIL"
            export S3_ACCESS_KEY_ID="$S3_ACCESS_KEY_ID"
            export S3_SECRET_ACCESS_KEY="$S3_SECRET_ACCESS_KEY"
            export S3_REGION="$S3_REGION"
            export S3_BUCKET="$S3_BUCKET"
            export S3_ENDPOINT="$S3_ENDPOINT"
            export S3_FILE_URL="$S3_FILE_URL"
            export COMPANY_NAME="$COMPANY_NAME"
            export COMPANY_ADDRESS="$COMPANY_ADDRESS"
            export COMPANY_POSTAL_CODE="$COMPANY_POSTAL_CODE"
            export COMPANY_CITY="$COMPANY_CITY"
            export COMPANY_EMAIL="$COMPANY_EMAIL"
            export COMPANY_PHONE="$COMPANY_PHONE"
            export COMPANY_TAX_ID="$COMPANY_TAX_ID"
            export COMPANY_BANK_INFO="$COMPANY_BANK_INFO"
            export PDF_FOOTER_TEXT="$PDF_FOOTER_TEXT"
            export EMAIL_SIGNATURE="$EMAIL_SIGNATURE"
            export EMAIL_FOOTER="$EMAIL_FOOTER"
            export MEDUSA_BACKEND_URL="$MEDUSA_BACKEND_URL"
            export VITE_MEDUSA_BACKEND_URL="$VITE_MEDUSA_BACKEND_URL"
            export STORE_CORS="$STORE_CORS"
            export ADMIN_CORS="$ADMIN_CORS"
            export AUTH_CORS="$AUTH_CORS"
            export STRIPE_API_KEY="$STRIPE_API_KEY"
            export STRIPE_WEBHOOK_SECRET="$STRIPE_WEBHOOK_SECRET"
            export MEILISEARCH_HOST="$MEILISEARCH_HOST"
            export MEILISEARCH_API_KEY="$MEILISEARCH_API_KEY"
            export MEILISEARCH_MASTER_KEY="$MEILISEARCH_MASTER_KEY"
            export MEILISEARCH_PRODUCT_INDEX_NAME="$MEILISEARCH_PRODUCT_INDEX_NAME"
            export STOREFRONT_URL="$STOREFRONT_URL"


            # Make sure script is executable
            chmod +x ./scripts/deploy-with-domain.sh

            # Run deployment
            ./scripts/deploy-with-domain.sh
      
      - name: Trigger Vercel Deployment
        if: success()
        run: |
          echo "✅ Backend deployment successful, triggering Vercel redeploy..."
          curl -X POST "${{ secrets.VERCEL_DEPLOY_HOOK }}" || echo "⚠️ Vercel deploy hook not configured"