# nginx-blue.template
# SSL proxy configuration for MedusaJS blue deployment
# Routes traffic to blue containers

events {
    worker_connections 1024;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # Upstream to Medusa backend - BLUE deployment
    upstream medusa_backend {
        server medusa_backend_server_blue:9000;
    }

    # Portainer HTTPS proxy
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name portainer.basiscamp-berlin.de;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/${SSL_CERT_NAME}.pem;
        ssl_certificate_key /etc/nginx/ssl/${SSL_KEY_NAME}.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Proxy to Portainer
        location / {
            proxy_pass http://portainer:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }

    # Uptime Kuma (Status) HTTPS proxy
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name status.basiscamp-berlin.de;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/${SSL_CERT_NAME}.pem;
        ssl_certificate_key /etc/nginx/ssl/${SSL_KEY_NAME}.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;

        # Security headers
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Proxy to Uptime Kuma
        location / {
            proxy_pass http://uptime-kuma:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # WebSocket support for real-time updates
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }

    # Main API server
    server {
        listen 443 ssl;
        http2 on;
        server_name ${DOMAIN_NAME};

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/${SSL_CERT_NAME}.pem;
        ssl_certificate_key /etc/nginx/ssl/${SSL_KEY_NAME}.pem;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:;" always;

        # Client max body size for file uploads
        client_max_body_size 50M;

        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Meilisearch search endpoint (read-only, public search)
        location /search/ {
            # Rate limiting for search
            limit_req zone=api burst=50 nodelay;

            # Hide Meilisearch's CORS headers (we'll set our own)
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;

            # CORS for storefront - single origin only (configurable via env var)
            # Note: Use STOREFRONT_URL for single origin, not STORE_CORS (which has multiple values)
            add_header Access-Control-Allow-Origin "${STOREFRONT_URL}" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Meilisearch-Client" always;
            add_header Access-Control-Max-Age 3600 always;

            # Handle preflight requests
            if ($request_method = OPTIONS) {
                return 204;
            }

            # Rewrite path to strip /search prefix
            rewrite ^/search/(.*) /$1 break;

            # Proxy to Meilisearch
            proxy_pass http://medusa_meilisearch:7700;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Admin panel and API routes
        location / {
            # Rate limiting for API endpoints
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://medusa_backend;

            # WebSocket support for admin panel
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://medusa_backend;
        }

        # Static assets (longer cache)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://medusa_backend;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Portainer subdomain
    server {
        listen 443 ssl;
        http2 on;
        server_name portainer.${DOMAIN_NAME};

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/${SSL_CERT_NAME}.pem;
        ssl_certificate_key /etc/nginx/ssl/${SSL_KEY_NAME}.pem;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Client max body size
        client_max_body_size 50M;

        # Proxy to Portainer
        location / {
            proxy_pass http://portainer:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # Uptime Kuma subdomain
    server {
        listen 443 ssl;
        http2 on;
        server_name status.${DOMAIN_NAME};

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/${SSL_CERT_NAME}.pem;
        ssl_certificate_key /etc/nginx/ssl/${SSL_KEY_NAME}.pem;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Client max body size
        client_max_body_size 50M;

        # Proxy to Uptime Kuma
        location / {
            proxy_pass http://uptime-kuma:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support for real-time updates
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # HTTP redirect to HTTPS for all domains
    server {
        listen 80;
        server_name ${DOMAIN_NAME} portainer.${DOMAIN_NAME} status.${DOMAIN_NAME};
        return 301 https://$server_name$request_uri;
    }
}
